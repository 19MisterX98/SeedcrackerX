plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.latticg.com/" }
	maven { url "https://maven.seedfinding.com/" }
	maven { url "https://maven-snapshots.seedfinding.com/" }
	maven { url "https://jitpack.io" }
	maven { url "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
}

configurations {
	includedLibrary
	implementation.extendsFrom includedLibrary
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include("net.fabricmc.fabric-api:fabric-command-api-v2:${project.command_api_version}")
	include("net.fabricmc.fabric-api:fabric-api-base:${project.fabric_api_base}")
	include("net.fabricmc.fabric-api:fabric-resource-loader-v0:${project.resource_loader_version}")

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")

	modImplementation ("com.terraformersmc:modmenu:${project.modmenu_version}") {transitive = false}

	includedLibrary('com.seedfinding:mc_math:ffd2edcfcc0d18147549c88cc7d8ec6cf21b5b91') { transitive = false }
	includedLibrary('com.seedfinding:mc_seed:1ead6fcefe7e8de4b3d60cd6c4e993f1e8f33409') { transitive = false }
	includedLibrary('com.seedfinding:mc_core:144493514fc9bfb735ce21838e48426625f29e43') { transitive = false }
	includedLibrary('com.seedfinding:mc_noise:7e3ba65e181796c4a2a1c8881d840b2254b92962') { transitive = false }
	includedLibrary('com.seedfinding:mc_biome:41a42cb9019a552598f12089059538853e18ec78') { transitive = false }
	includedLibrary('com.seedfinding:mc_terrain:b4246cbd5880c4f8745ccb90e1b102bde3448126') { transitive = false }
	includedLibrary('com.seedfinding:mc_feature:919b7e513cc1e87e029a9cd703fc4e2dc8686229') { transitive = false }
	includedLibrary('com.seedfinding:mc_reversal:ca64c0890c106f1a2207623c316fce86f250b918') { transitive = false }

	includedLibrary('com.seedfinding:latticg:1.06')

	modRuntimeOnly('me.djtheredstoner:DevAuth-fabric:1.1.0') {
		exclude group: 'net.fabricmc', module: 'fabric-loader'
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE")

	from(configurations.includedLibrary.collect { it.isDirectory() ? it : zipTree(it) }) {
		include 'com/seedfinding/**'
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
